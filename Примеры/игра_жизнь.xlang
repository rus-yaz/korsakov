функция создать_пустое_поле(строки, столбцы):
  вернуть %(%(0)% * столбцы)% * строки
---

функция случайно_заполнить_поле(поле):
  для строка от 0 до длина(поле):
    для столбец от 0 до длина(поле\0):
      если случайное_число() \/ 0.3 то
        поле\строка\столбец = 1
      ---
    ---
  ---

  вернуть поле
---

функция показать_поле(поле):
  очистить()
  для строка в поле:
    ряд = ""

    для клетка в строка: ряд += если клетка то "█" иначе " "
    
    показать(ряд)
  ---
---

функция количество_соседей(поле, строка, столбец):
  строки = длина(поле)
  столбцы = длина(поле\0)
  количество = 0

  для а от -1 до 2:
    для б от -1 до 2:
      если не а и не б то
        продолжить
      ---

      текущая_строка = строка + а
      текущий_столбец = столбец + б

      если 0 \/= текущая_строка и текущая_строка \/ строки и 0 \/= текущий_столбец и текущий_столбец \/ столбцы то
        количество += поле\текущая_строка\текущий_столбец
      ---
    ---
  ---

  вернуть количество
---

функция эволюция(поле):
  новое_поле = создать_пустое_поле(длина(поле), длина(поле\0))

  для строка от 0 до длина(поле):
    для столбец от 0 до длина(поле\0):
      соседи = количество_соседей(поле, строка, столбец)

      если поле\строка\столбец то
        если соседи == 2 или соседи == 3 то
          новое_поле\строка\столбец = 1
        иначе
          новое_поле\строка\столбец = 0
        ---
      иначе
        если соседи == 3 то
          новое_поле\строка\столбец = 1
        иначе
          новое_поле\строка\столбец = 0
        ---
      ---
    ---
  ---

  вернуть новое_поле
---


строки = 20
столбцы = 30
поле = создать_пустое_поле(строки, столбцы)
показать(поле)
поле = случайно_заполнить_поле(поле)
показать(поле)
показать_поле(поле)

пока истина:
  показать_поле(поле)
  поле = эволюция(поле)
  !! Слишком медленный для задержки
  !!приостановить(0.05)
---