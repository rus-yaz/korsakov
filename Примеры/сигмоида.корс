!*
 * Копирайт © 2025 ООО «РУС.ЯЗ»
 * SPDX-License-Identifier: GPLv3+ ИЛИ прориетарная
 *!

функция сигмоида(значение)
  1 / (1 + степень_эйлера(-значение))
---

функция дериватив_сигмоиды(значение)
  значение = сигмоида(значение)
  значение * (1 - значение)
---

функция среднеквадратичная_ошибка(истинные_значения найденные_значения)
  итого = 0

  длина = 0
  для _ из найденные_значения
    длина++
  ---

  для а от 0 до длина
    итого += (истинные_значения.а - найденные_значения.а) * (истинные_значения.а - найденные_значения.а)
  ---

  итого / длина
---

вес_1   = получить_псевдослучайное_число(0 1000) / 1000
вес_2   = получить_псевдослучайное_число(0 1000) / 1000
вес_3   = получить_псевдослучайное_число(0 1000) / 1000
вес_4   = получить_псевдослучайное_число(0 1000) / 1000
вес_5   = получить_псевдослучайное_число(0 1000) / 1000
вес_6   = получить_псевдослучайное_число(0 1000) / 1000
порог_1 = получить_псевдослучайное_число(0 1000) / 1000
порог_2 = получить_псевдослучайное_число(0 1000) / 1000
порог_3 = получить_псевдослучайное_число(0 1000) / 1000

функция проход(значения)
  скрытый_слой_1 = сигмоида(вес_1 * значения.0 + вес_2 * значения.1 + порог_1)
  скрытый_слой_2 = сигмоида(вес_3 * значения.0 + вес_4 * значения.1 + порог_2)

  выходной_слой = сигмоида(вес_5 * скрытый_слой_1 + вес_6 * скрытый_слой_2 + порог_3)
---

функция обучение(данные истинные_значения)
  степень_обучения = 0,1
  количество_эпох = 10

  длина = 0
  для _ из данные
    длина++
  ---

  счётчик = 0

  для эпоха от 0 до количество_эпох
    для очередь от 0 до длина
      значения = данные.очередь

      истинное_значение = истинные_значения.очередь

      вход_скрытого_слоя_1 = вес_1 * значения.0 + вес_2 * значения.1 + порог_1
      скрытый_слой_1       = сигмоида(вход_скрытого_слоя_1)

      вход_скрытого_слоя_2 = вес_3 * значения.0 + вес_4 * значения.1 + порог_2
      скрытый_слой_2       = сигмоида(вход_скрытого_слоя_2)

      вход_выходного_слоя = вес_5 * значения.0 + вес_6 * значения.1 + порог_3
      выходной_слой       = сигмоида(вход_выходного_слоя)

      найденное_значение = выходной_слой

      производная_найденного_значения = -2 * (истинное_значение - найденное_значение)

      производная_веса_5   = скрытый_слой_1 * дериватив_сигмоиды(выходной_слой)
      производная_веса_6   = скрытый_слой_2 * дериватив_сигмоиды(выходной_слой)
      производная_порога_3 = дериватив_сигмоиды(выходной_слой)

      производная_скрытого_слоя_1 = вес_5 * дериватив_сигмоиды(выходной_слой)
      производная_скрытого_слоя_2 = вес_6 * дериватив_сигмоиды(выходной_слой)

      производная_веса_1   = значения.0 * дериватив_сигмоиды(скрытый_слой_1)
      производная_веса_2   = значения.1 * дериватив_сигмоиды(скрытый_слой_1)
      производная_порога_1 = дериватив_сигмоиды(скрытый_слой_1)

      производная_веса_3   = значения.0 * дериватив_сигмоиды(скрытый_слой_2)
      производная_веса_4   = значения.1 * дериватив_сигмоиды(скрытый_слой_2)
      производная_порога_2 = дериватив_сигмоиды(скрытый_слой_2)

      вес_1   -= степень_обучения * производная_найденного_значения * производная_скрытого_слоя_1 * производная_веса_1
      вес_2   -= степень_обучения * производная_найденного_значения * производная_скрытого_слоя_1 * производная_веса_2
      порог_1 -= степень_обучения * производная_найденного_значения * производная_скрытого_слоя_1 * производная_порога_1

      вес_3   -= степень_обучения * производная_найденного_значения * производная_скрытого_слоя_2 * производная_веса_3
      вес_4   -= степень_обучения * производная_найденного_значения * производная_скрытого_слоя_2 * производная_веса_4
      порог_2 -= степень_обучения * производная_найденного_значения * производная_скрытого_слоя_2 * производная_порога_2

      вес_5   -= степень_обучения * производная_найденного_значения * производная_веса_5
      вес_6   -= степень_обучения * производная_найденного_значения * производная_веса_6
      порог_3 -= степень_обучения * производная_найденного_значения * производная_порога_3
    ---

    найденные_значения = %()
    для значение из данные
      найденные_значения += %(проход(значение))
    ---

    потери = среднеквадратичная_ошибка(истинные_значения найденные_значения)
    показать("Эпоха:" эпоха "| Потери:" потери)
  ---
---

данные = %(
  %(
    -2
    -1
  )
  %(
    25
    6
  )
  %(17   4)
  %(-15
  -6)
)

истинные_значения = %(1 0 0 1)

обучение(данные истинные_значения)
